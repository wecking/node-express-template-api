{
  "swagger": "2.0",
  "info": {
    "description": "This is the DomJudge Api documentation",
    "version": "1.0.0",
    "title": "DomJudge API",
    "contact": {
      "email": "kingsley@l5lab.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "user",
      "description": "Secured user-only calls"
    },
    {
      "name": "user",
      "description": "Operations available to regular users"
    }
  ],
  "paths": {
    "/user/signup": {
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "Create new user account",
        "operationId": "createUser",
        "description": "Create new user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "New User Account",
            "description": "new user account to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created"
          },
          "400": {
            "description": "invalid input, object invalid"
          },
          "409": {
            "description": "an existing item already exists"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "Login an existing user",
        "operationId": "login",
        "description": "Login to an existing user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Login a user",
            "description": "User login details",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user login",
            "schema": {
              "$ref": "#/definitions/UserLoginCookies"
            }
          },
          "400": {
            "description": "invalid username or password"
          }
        }
      }
    },
    "/user/update/": {
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "update an existing user",
        "operationId": "profile update",
        "description": "Update an existing user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "update a user details",
            "description": "User update details",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user profile updated",
            "schema": {
              "$ref": "#/definitions/UserLoginCookies"
            }
          },
          "400": {
            "description": "invalid object"
          },
          "302": {
            "description": "User not logged in (Redirect)"
          }
        }
      }
    },
    "/user/logout/": {
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "Logout a logged in user",
        "operationId": "logout",
        "description": "Logout to an existing user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Logout a user",
            "description": "User cookies",
            "schema": {
              "$ref": "#/definitions/UserLoginCookies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "user logout",
            "schema": {
              "$ref": "#/definitions/UserLoginCookies"
            }
          }
        }
      }
    },
    "/user/lost-password/": {
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "Request lost an existing user password",
        "operationId": "password Lost request",
        "description": "Request lost an existing user account password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request lost a user password",
            "description": "Account email",
            "schema": {
              "$ref": "#/definitions/UserEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "password reset email sent"
          },
          "409": {
            "description": "invalid email"
          },
          "400": {
            "description": "unable to dispatch password reset to email"
          }
        }
      }
    },
    "/user/reset-password/:key/": {
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "Reset an existing user password",
        "operationId": "password reset",
        "description": "Reset an existing user account password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "key",
            "description": "pass the token send the user email address",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "reset a user password",
            "description": "Account email",
            "schema": {
              "$ref": "#/definitions/NewUserPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "password reset email successful"
          },
          "409": {
            "description": "invalid token"
          },
          "400": {
            "description": "unable to update password"
          }
        }
      }
    },
    "/user/delete": {
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "Delete an existing user account",
        "operationId": "delete account",
        "description": "Delete an existing user account",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Logout a user",
            "description": "User cookies",
            "schema": {
              "$ref": "#/definitions/UserLoginCookies"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account Deleted"
          },
          "400": {
            "description": "record not found"
          }
        }
      }
    },
    "/*": {
      "post": {
        "tags": [
          "admins"
        ],
        "summary": "page not found",
        "operationId": "page not found",
        "description": "page not found",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "record not found"
          }
        }
      },
      "get": {
        "tags": [
          "admins"
        ],
        "summary": "page not found",
        "operationId": "page not found get",
        "description": "page not found",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "record not found"
          }
        }
      },
      "delete": {
        "tags": [
          "admins"
        ],
        "summary": "page not found",
        "operationId": "page not found delete",
        "description": "page not found",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "record not found"
          }
        }
      },
      "put": {
        "tags": [
          "admins"
        ],
        "summary": "page not found",
        "operationId": "page not found  put",
        "description": "page not found",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "400": {
            "description": "record not found"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": [
        "user",
        "email",
        "password",
        "name",
        "state"
      ],
      "properties": {
        "user": {
          "type": "string",
          "uniqueItems": true
        },
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string",
          "uniqueItems": true
        },
        "name": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "required": [
        "user",
        "email"
      ],
      "properties": {
        "user": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string",
          "uniqueItems": true
        },
        "remember-me": {
          "type": "boolean"
        }
      }
    },
    "UserLoginCookies": {
      "type": "object",
      "required": [
        "cookies"
      ],
      "properties": {
        "cookies": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "UserEmail": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        }
      }
    },
    "NewUserPassword": {
      "type": "object",
      "required": [
        "pass"
      ],
      "properties": {
        "pass": {
          "type": "string"
        }
      }
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "schemes": [
    "https"
  ]
}